{"version":3,"sources":["components/Card/Card.module.scss","components/DesktopHeader/DesktopHeader.module.scss","components/Library/Library.module.scss","components/Error/Error.module.scss","components/PlanetPage/InfoField/InfoField.module.scss","components/PlanetPage/PlanetPage.module.scss","components/SearchForm/SearchForm.module.scss","components/Preloader/Preloader.module.scss","img/star-wars-gif.gif","img/back.svg","components/Preloader/Preloader.jsx","constants/general.js","API/swapi.js","redux/planetsReducer.js","components/Card/Card.jsx","components/Library/Library.jsx","redux/currentPlanetReducer.js","components/PlanetPage/InfoField/InfoField.jsx","components/PlanetPage/PlanetPage.jsx","redux/searchFormReducer.js","components/SearchForm/SearchForm.jsx","components/Error/Error.jsx","components/DesktopHeader/DesktopHeader.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","Preloader","props","className","styles","IS_ELECTRON","process","BASE_URL","convertResponse","response","ok","json","result","Error","swapi","getPlanets","fetch","then","getMorePlanets","next","getPlanetDetails","id","getPerson","url","searchPlanets","searchValue","SET_PLANETS","ADD_PLANETS","TOGGLE_IS_GLOBAL_LOADING","TOGGLE_IS_LOADING","initialState","planets","isLoading","isGlobalLoading","planetsReducer","state","action","type","payload","results","setPlanets","data","toggleIsLoading","toggleIsGlobalLoading","Card","name","climate","population","s","to","Card__property","value","React","memo","Library","requestPlanets","requestMorePlanets","match","useEffect","params","PlanetUrlToID","style","height","length","NotFound","map","planet","cn","showMoreBtn","showMoreBtn_preloader","onClick","compose","withRouter","connect","dispatch","catch","window","location","hash","finally","err","console","log","searchvalue","SET_PLANET_DETAILS","SET_PLANET_RESIDENTS","CLEAR_CURRENT_PLANET","rotation_period","diameter","gravity","terrain","residents","currentPlanetReducer","InfoField","propertyName","values","displayValues","Array","isArray","split","toUpperCase","replace","item","PlanetPage","requestPlanetDetails","clearCurrentPlanet","details","history","electron","ipcRenderer","send","InfoBlock","Object","entries","filter","key","src","require","default","alt","currentPlanet","Promise","all","person","residentsResponse","SET_SEARCH_VALUE","SearchForm","setSearchValue","onSubmit","e","preventDefault","push","searchForm","search","onChange","target","placeholder","error","contentWrapper","title","mainPageBtn","DesktopHeader","header","path","btn","goBack","empty","barOverlay","SearchFormAndLibrary","SearchFormAndPlanetPage","withHeader","Component","App","exact","render","reducers","combineReducers","searchFormReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,eAAiB,6BAA6B,KAAO,mBAAmB,MAAQ,sB,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,8BAA8B,IAAM,2BAA2B,MAAQ,6BAA6B,WAAa,oC,mBCA5ID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,YAAc,6BAA6B,sBAAwB,yC,mBCA7JD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,eAAiB,8BAA8B,MAAQ,qBAAqB,YAAc,6B,mBCAzID,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,4B,mBCAnGD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,WAAa,iC,mBCA/GD,EAAOC,QAAU,CAAC,UAAY,+B,0ECD9B,OAAe,cAA0B,2C,gCCAzC,OAAe,cAA0B,kC,wJCQ1BC,EALG,SAACC,GAAD,OAChB,iCAAKC,UAAWC,IAAOH,WAAeC,K,uBCJ3BG,GAAcC,EACdC,EAAW,yBCClBC,EAAe,iDAAG,WAAOC,GAAP,qFAChBA,EAASC,GADO,gCAEKD,EAASE,OAFd,cAEVC,EAFU,yBAGTA,GAHS,aAKd,IAAIC,MALU,2CAAH,sDA8BNC,EAtBD,CACVC,WADU,WAEN,OAAOC,MAAMT,EAAW,YAAYU,KAAKT,IAG7CU,eALU,SAKKC,GACX,OAAOH,MAAMG,GAAMF,KAAKT,IAG5BY,iBATU,SASOC,GACb,OAAOL,MAAMT,EAAQ,kBAAcc,EAAd,MAAqBJ,KAAKT,IAGnDc,UAbU,SAaAC,GACN,OAAOP,MAAMO,GAAKN,KAAKT,IAG3BgB,cAjBU,SAiBIC,GACV,OAAOT,MAAMT,EAAQ,0BAAsBkB,IAAeR,KAAKT,KC1BjEkB,EAAc,sBAClBC,EAAc,sBACdC,EAA2B,mCAC3BC,EAAoB,4BAEhBC,EAAe,CACnBX,KAAM,GACNY,QAAS,GACTC,WAAW,EACXC,iBAAiB,GA+BJC,EA5BQ,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEJ,QAAQ,YAAKK,EAAOE,QAAQC,SAC5BpB,KAAMiB,EAAOE,QAAQnB,OAEzB,KAAKQ,EACH,OAAO,2BACFQ,GADL,IAEEJ,QAAQ,GAAD,mBAAMI,EAAMJ,SAAZ,YAAwBK,EAAOE,QAAQC,UAC9CpB,KAAMiB,EAAOE,QAAQnB,OAEzB,KAAKU,EACH,OAAO,2BACFM,GADL,IAEEH,UAAWI,EAAOJ,YAEtB,KAAKJ,EACH,OAAO,2BACFO,GADL,IAEEF,gBAAiBG,EAAOJ,YAE5B,QAAS,OAAOG,IAKdK,EAAa,SAACC,GAAD,MAAW,CAAEJ,KAAMX,EAAaY,QAASG,IAEtDC,EAAkB,SAACV,GAAD,MAAgB,CAAEK,KAAMR,EAAmBG,cAC7DW,EAAwB,SAACX,GAAD,MAAgB,CAAEK,KAAMT,EAA0BI,c,yBC1C1EY,EAAO,SAAC,GAAD,IAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,WAAtB,OACX,eAAC,IAAD,CAAS5C,UAAW6C,IAAEJ,KAAMK,GAAE,kBAAa5B,GAA3C,UACE,sBAAKlB,UAAW6C,IAAEE,eAAlB,UACE,qBAAK/C,UAAW6C,IAAEH,KAAlB,kBAGA,qBAAK1C,UAAW6C,IAAEG,MAAlB,SACGN,OAIL,sBAAK1C,UAAW6C,IAAEE,eAAlB,UACE,qBAAK/C,UAAW6C,IAAEH,KAAlB,qBAGA,qBAAK1C,UAAW6C,IAAEG,MAAlB,SACGL,OAIL,sBAAK3C,UAAW6C,IAAEE,eAAlB,UACE,qBAAK/C,UAAW6C,IAAEH,KAAlB,wBAGA,qBAAK1C,UAAW6C,IAAEG,MAAlB,SACGJ,WAOMK,MAAMC,KAAKT,G,kCCzBpBU,EAAU,SAAC,GAA6G,IAA3GvB,EAA0G,EAA1GA,QAASwB,EAAiG,EAAjGA,eAAgBC,EAAiF,EAAjFA,mBAAoBrC,EAA6D,EAA7DA,KAAMc,EAAuD,EAAvDA,gBAAiBD,EAAsC,EAAtCA,UAAWyB,EAA2B,EAA3BA,MAAOjC,EAAoB,EAApBA,cAEvGkC,qBAAU,WACJD,EAAME,OAAOlC,YACfD,EAAciC,EAAME,OAAOlC,aAE3B8B,MAED,CAACE,EAAME,OAAOlC,YAAaD,EAAe+B,IAE7C,IAAMK,EAAgB,SAACrC,GAAD,OAAUA,EAAIkC,MAAM,uBAE1C,OAAQxB,EACJ,cAAC,EAAD,CAAW4B,MAAO,CAAEC,OAAO,gBAAD,OAAsC,GAAtC,UAC1B,qCACoB,IAAnB/B,EAAQgC,QACP,qBAAK5D,UAAW6C,IAAEgB,SAAlB,+BAKF,qBAAK7D,UAAW6C,IAAEM,QAAlB,SACGvB,EAAQkC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEE7C,GAAIuC,EAAcM,EAAO3C,KACzBsB,KAAMqB,EAAOrB,KACbC,QAASoB,EAAOpB,QAChBC,WAAYmB,EAAOnB,YAJda,EAAcM,EAAO3C,WAS/BJ,GACC,qBAAKhB,UAAWgE,IAAGnB,IAAEoB,YAAH,eAAmBpB,IAAEqB,sBAAwBrC,IAC7DsC,QAAS,WACFtC,GAAWwB,EAAmBrC,IAFvC,UAKIa,GAAa,kBAcVuC,cACbC,IACAC,aATsB,SAACtC,GAAD,MAAY,CAClCJ,QAASI,EAAMJ,QAAQA,QACvBZ,KAAMgB,EAAMJ,QAAQZ,KACpBa,UAAWG,EAAMJ,QAAQC,UACzBC,gBAAiBE,EAAMJ,QAAQE,mBAO7B,CAAEuB,mBFN4B,SAACrC,GACjC,wDAAO,WAAOuD,GAAP,2EACLA,EAAShC,GAAgB,IACzB5B,EAAMI,eAAeC,GAAMF,MAAK,SAACR,GAC/BiE,EAtBwB,CAAErC,KAAMV,EAAaW,QAsBzB7B,OACnBkE,OAAM,WACPC,OAAOC,SAASC,KAAO,aACtBC,SAAQ,WACTL,EAAShC,GAAgB,OAPtB,2CAAP,uDEKwBa,eFpBI,WAC5B,wDAAO,WAAOmB,GAAP,2EACLA,EAAS/B,GAAsB,IAC/B7B,EAAMC,aAAaE,MAAK,SAACR,GACvBiE,EAASlC,EAAW/B,OACnBkE,OAAM,SAACK,GACRC,QAAQC,IAAI,IAAKF,GACjBJ,OAAOC,SAASC,KAAO,aACtBC,SAAQ,WACTL,EAAS/B,GAAsB,OAR5B,2CAAP,uDEmBwCnB,cFOb,SAAC2D,GAC5B,wDAAO,WAAOT,GAAP,2EACLA,EAAS/B,GAAsB,IAC/B7B,EAAMU,cAAc2D,GAAalE,MAAK,SAACR,GACrCiE,EAASlC,EAAW/B,OACnBkE,OAAM,WACPC,OAAOC,SAASC,KAAO,aACtBC,SAAQ,WACTL,EAAS/B,GAAsB,OAP5B,2CAAP,yDEZa4B,CAMbnB,IAAMC,KAAKC,I,QCpEP8B,EAAqB,mCACzBC,EAAuB,qCACvBC,EAAuB,qCACvBzD,EAAoB,kCAEhBC,EAAe,CACnBe,KAAM,KACN0C,gBAAiB,KACjBC,SAAU,KACV1C,QAAS,KACT2C,QAAS,KACTC,QAAS,KACT3C,WAAY,KACZ4C,UAAW,GACX3D,WAAW,GAgCE4D,EA7Bc,WAAmC,IAAlCzD,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC7D,OAAQA,EAAOC,MACb,KAAK+C,EACH,OAAO,2BACFjD,GADL,IAEEU,KAAMT,EAAOE,QAAQO,KACrB0C,gBAAiBnD,EAAOE,QAAQiD,gBAChCC,SAAUpD,EAAOE,QAAQkD,SACzB1C,QAASV,EAAOE,QAAQQ,QACxB2C,QAASrD,EAAOE,QAAQmD,QACxBC,QAAStD,EAAOE,QAAQoD,QACxB3C,WAAYX,EAAOE,QAAQS,aAE/B,KAAKsC,EACH,OAAO,2BACFlD,GADL,IAEEwD,UAAWvD,EAAOE,UAEtB,KAAKT,EACH,OAAO,2BACFM,GADL,IAEEH,UAAWI,EAAOJ,YAEtB,KAAKsD,EACH,OAAOxD,EACT,QAAS,OAAOK,IAOdO,EAAkB,SAACV,GAAD,MAAgB,CAAEK,KAAMR,EAAmBG,c,iBCvBpD6D,EAzBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAC3BC,EAAiBC,MAAMC,QAAQH,IAAWA,EAAOI,MAAM,MAAMpC,OAAS,EAAKgC,EAASA,EAAOI,MAAM,MAEvG,OACE,sBAAKhG,UAAW6C,IAAE6C,UAAlB,UACE,sBAAM1F,UAAW6C,IAAEH,KAAnB,SACGiD,GAAgBA,EAAaM,cAAcC,QAAQ,IAAK,OAG3D,qBAAKlG,UAAW6C,IAAE+C,OAAlB,SACGE,MAAMC,QAAQF,GACXA,EAAc/B,KAAI,SAACqC,GAAD,OAClB,+BACGA,GADQA,MAIX,+BACCP,U,oBCTPQ,GAAa,SAAC,GAAsF,IAApF9C,EAAmF,EAAnFA,MAAO+C,EAA4E,EAA5EA,qBAAsBC,EAAsD,EAAtDA,mBAAoBC,EAAkC,EAAlCA,QAAS1E,EAAyB,EAAzBA,UAAW2E,EAAc,EAAdA,QAazF,OAXAjD,qBAAU,WAER,OADA8C,EAAqB/C,EAAME,OAAOtC,GAAIsF,GAC/B,WACLF,OAED,CAAChD,EAAME,OAAOtC,GAAImF,EAAsBC,EAAoBE,IAE/DjD,qBAAU,WAAO,IAAD,EACd,UAAAkB,OAAOgC,gBAAP,SAAiBC,YAAYC,KAAK,cAAeJ,EAAQ7D,MAAQ,MAChE,CAAC6D,EAAQ7D,OAEJb,EACJ,cAAC,EAAD,CAAW6B,MAAO,CAAEC,OAAO,gBAAD,OAAsC,GAAtC,UAE1B,sBAAK3D,UAAW6C,KAAEuD,WAAlB,UACE,qBAAKpG,UAAW6C,KAAE+D,UAAlB,SACGC,OAAOC,QAAQP,GACbQ,QAAO,mCAAOnB,GAAP,kBAAmBA,GAAUA,EAAOhC,OAAS,KACpDE,KAAI,YAAoB,IAAD,mBAAjBkD,EAAiB,KAAZpB,EAAY,KACtB,OAAO,cAAC,EAAD,CAAqBD,aAAcqB,EAAKpB,OAAQA,GAAhCoB,QAK7B,qBAAKC,IAAKC,EAAQ,IAAiCC,QAASC,IAAI,SAoBzDhD,eACbC,IACAC,aAhBsB,SAACtC,GAAD,MAAY,CAClCuE,QAAS,CACP7D,KAAMV,EAAMqF,cAAc3E,KAC1B0C,gBAAiBpD,EAAMqF,cAAcjC,gBACrCC,SAAUrD,EAAMqF,cAAchC,SAC9B1C,QAASX,EAAMqF,cAAc1E,QAC7B2C,QAAStD,EAAMqF,cAAc/B,QAC7BC,QAASvD,EAAMqF,cAAc9B,QAC7B3C,WAAYZ,EAAMqF,cAAczE,WAChC4C,UAAWxD,EAAMqF,cAAc7B,WAEjC3D,UAAWG,EAAMqF,cAAcxF,aAO7B,CAAEwE,qBFP8B,SAACnF,GACnC,wDAAO,WAAOqD,GAAP,2EACLA,EAAShC,GAAgB,IACzB5B,EAAMM,iBAAiBC,GAAIJ,KAA3B,iDAAgC,WAAOR,GAAP,2FACxBgH,QAAQC,IACZjH,EAASkF,UAAU1B,KAAI,SAAA0D,GAAM,OAAI7G,EAAMQ,UAAUqG,OACjD1G,MAAK,SAAC2G,GAVa,IAACnF,EAWpBiC,GAXoBjC,EAWQmF,EAAkB3D,KAAI,qBAAGpB,QAXvB,CAAER,KAAMgD,EAAsB/C,QAASG,QAOzC,OAM9BiC,EAd8B,CAAErC,KAAM+C,EAAoB9C,QAchC7B,IANI,2CAAhC,uDAOGkE,OAAM,WACPC,OAAOC,SAASC,KAAO,aACtBC,SAAQ,WACTL,EAAShC,GAAgB,OAZtB,2CAAP,uDEM0B+D,mBFTM,iBAAO,CAAEpE,KAAMiD,MEKlCf,CAMbnB,IAAMC,KAAKkD,K,oBC/DPsB,GAAmB,0BAEnB/F,GAAe,CACnBL,YAAa,IAcAqG,GAXI,WAAmC,IAAlC3F,EAAiC,uDAAzBL,GAAcM,EAAW,uCACnD,OAAQA,EAAOC,OACRwF,GACI,2BACF1F,GADL,IAEEV,YAAaW,EAAOE,UAERH,GCNd2F,GAAa,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,eAAgBtE,EAAkC,EAAlCA,MAAOhC,EAA2B,EAA3BA,YAAakF,EAAc,EAAdA,QACxDjD,qBAAU,WACRqE,EAAetE,EAAME,OAAOlC,aAAe,MAC1C,CAACgC,EAAME,OAAOlC,YAAasG,IAW9B,OACE,uBAAMC,SAVO,SAACC,GACdA,EAAEC,iBACEzG,EACFkF,EAAQwB,KAAR,kBAAwB1G,IAExBkF,EAAQwB,KAAK,MAKShI,UAAW6C,KAAEoF,WAArC,UACE,uBACEjI,UAAW6C,KAAEqF,OAAQhG,KAAK,OAC1BiG,SAAU,SAACL,GAAD,OAAOF,EAAeE,EAAEM,OAAOpF,QACzCA,MAAO1B,GAA4B,GACnC+G,YAAY,sBACd,wBAAQnG,KAAK,eASJkC,eACbC,IACAC,aANsB,SAACtC,GAAD,MAAY,CAClCV,YAAaU,EAAMiG,WAAW3G,eAO5B,CAAEsG,eDvBwB,SAACtF,GAAD,MAAW,CAAEJ,KAAMwF,GAAkBvF,QAASG,MCmB7D8B,CAMbnB,IAAMC,KAAKyE,K,oBC3BEjH,GAZD,kBACZ,qBAAKV,UAAW6C,KAAEyF,MAAlB,SACE,sBAAKtI,UAAW6C,KAAE0F,eAAlB,UACE,qBAAKvI,UAAW6C,KAAE2F,MAAlB,mBACA,2CAAa,iEACb,cAAC,IAAD,CAASxI,UAAW6C,KAAE4F,YAAa3F,GAAG,IAAtC,6B,oBCLA4F,GAAgB,SAAC,GAAwB,IAAtBpF,EAAqB,EAArBA,MAAOkD,EAAc,EAAdA,QAC9B,OACE,sBAAKxG,UAAW6C,KAAE8F,OAAlB,UACkB,MAAfrF,EAAMsF,KAEH,qBAAK3B,IAAKC,EAAQ,IAAsBC,QAASC,IAAI,UAAUpH,UAAW6C,KAAEgG,IAAK1E,QAAS,kBAAMqC,EAAQsC,YACtG,qBAAK9I,UAAW6C,KAAEkG,QACxB,qBAAK9B,IAAI,gBAAgBG,IAAI,UAAUpH,UAAW6C,KAAEgG,IAAK1E,QAAS,kBAAMqC,EAAQsC,YAChF,qBAAK9I,UAAW6C,KAAEmG,iBCFlBC,IDOS5E,YAAWpB,IAAMC,KAAKwF,KCNnC,qCACE,cAAC,GAAD,IACA,cAAC,EAAD,QAIEQ,GACJ,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,OAIEC,GAAa,SAACC,GAAD,OACjB,qCACGlJ,EACAkJ,MAkBUC,GAdH,WACV,OACE,qBAAKrJ,UAAyC,MAA9C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsJ,OAAK,EAACV,KAAK,IAAIW,OAAQ,kBAAMJ,GAAWF,OAC/C,cAAC,IAAD,CAAOL,KAAK,cAAcW,OAAQ,kBAAMJ,GAAWD,OACnD,cAAC,IAAD,CAAON,KAAK,uBAAuBW,OAAQ,kBAAMJ,GAAWF,OAC5D,cAAC,IAAD,CAAOL,KAAK,SAASW,OAAQ,kBAAMJ,GAAW,cAAC,GAAD,QAC9C,cAAC,IAAD,CAAOP,KAAK,IAAIW,OAAQ,kBAAM,cAAC,IAAD,CAAUzG,GAAG,oB,SCjC7C0G,GAAWC,YAAgB,CAC/B7H,QAASG,EACTsF,cAAe5B,EACfwC,WAAYyB,KAGRC,GAAmBlF,OAAOmF,sCAAwCxF,IAGzDyF,GAFDC,YAAYN,GAAUG,GAAiBI,YAAgBC,QCJrEC,IAASV,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUM,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.86cd567e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1v2cZ\",\"Card__property\":\"Card_Card__property__Aahcx\",\"name\":\"Card_name__r36-q\",\"value\":\"Card_value__3_M_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DesktopHeader_header__3_0mC\",\"btn\":\"DesktopHeader_btn__3ZpgL\",\"empty\":\"DesktopHeader_empty__3E0O8\",\"barOverlay\":\"DesktopHeader_barOverlay__3HAAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Library\":\"Library_Library__1fGSF\",\"NotFound\":\"Library_NotFound__3G7da\",\"showMoreBtn\":\"Library_showMoreBtn__3yiOD\",\"showMoreBtn_preloader\":\"Library_showMoreBtn_preloader__2ngkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__3nLsN\",\"contentWrapper\":\"Error_contentWrapper__3NeZ_\",\"title\":\"Error_title__2hED2\",\"mainPageBtn\":\"Error_mainPageBtn__EbuRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoField\":\"InfoField_InfoField__1Zc-7\",\"name\":\"InfoField_name__2eoYC\",\"values\":\"InfoField_values__3xN1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanetPage\":\"PlanetPage_PlanetPage__1ufD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__1N1Bz\",\"search\":\"SearchForm_search__1ULgL\",\"backButton\":\"SearchForm_backButton__340eM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__182ZQ\"};","export default __webpack_public_path__ + \"static/media/star-wars-gif.153166d7.gif\";","export default __webpack_public_path__ + \"static/media/back.1dbfbe02.svg\";","import React from 'react';\nimport styles from './Preloader.module.scss';\n\nconst Preloader = (props) => (\n  <div className={styles.Preloader} {...props}></div>\n)\n\n\nexport default Preloader;","export const IS_ELECTRON = process.env.REACT_APP_ELECTRON === 'true';\nexport const BASE_URL = 'https://swapi.dev/api/';","import { BASE_URL } from '../constants/general';\n\nconst convertResponse = async (response) => {\n    if (response.ok) {\n        const result = await response.json();\n        return result;\n    }\n    throw new Error();\n}\n\nconst swapi = {\n    getPlanets() { // get planets(page=1)\n        return fetch(BASE_URL + 'planets/').then(convertResponse);\n    },\n\n    getMorePlanets(next) { // get planets(page=2, 3, ...), depends on url(next)\n        return fetch(next).then(convertResponse)\n    },\n\n    getPlanetDetails(id) {\n        return fetch(BASE_URL + `planets/${id}/`).then(convertResponse)\n    },\n\n    getPerson(url) { // get person from person url\n        return fetch(url).then(convertResponse)\n    },\n\n    searchPlanets(searchValue) { // search planets(page=1)\n        return fetch(BASE_URL + `planets/?search=${searchValue}`).then(convertResponse)\n    }\n}\n\nexport default swapi;","import swapi from './../API/swapi';\n\nconst SET_PLANETS = 'planets/SET_PLANETS',\n  ADD_PLANETS = 'planets/ADD_PLANETS',\n  TOGGLE_IS_GLOBAL_LOADING = 'planets/TOGGLE_IS_GLOBAL_LOADING',\n  TOGGLE_IS_LOADING = 'planets/TOGGLE_IS_LOADING';\n\nconst initialState = {\n  next: '',\n  planets: [],\n  isLoading: false,\n  isGlobalLoading: false,\n};\n\nconst planetsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLANETS: // when componentDidMount add planets(page=1) to state\n      return {\n        ...state,\n        planets: [...action.payload.results],\n        next: action.payload.next\n      };\n    case ADD_PLANETS: // add planets(page=2, 3, ....) to state\n      return {\n        ...state,\n        planets: [...state.planets, ...action.payload.results],\n        next: action.payload.next\n      };\n    case TOGGLE_IS_LOADING: // show preloader in showMoreBtn in Library\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n    case TOGGLE_IS_GLOBAL_LOADING: // show preloader\n      return {\n        ...state,\n        isGlobalLoading: action.isLoading\n      };\n    default: return state;\n  }\n}\n\nexport default planetsReducer;\nconst setPlanets = (data) => ({ type: SET_PLANETS, payload: data });\nconst addPlanets = (data) => ({ type: ADD_PLANETS, payload: data });\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\nconst toggleIsGlobalLoading = (isLoading) => ({ type: TOGGLE_IS_GLOBAL_LOADING, isLoading });\n\nexport const requestPlanets = () => {\n  return async (dispatch) => {\n    dispatch(toggleIsGlobalLoading(true));\n    swapi.getPlanets().then((response) => {\n      dispatch(setPlanets(response));\n    }).catch((err) => {\n      console.log('+', err);\n      window.location.hash = '#/error'\n    }).finally(() => {\n      dispatch(toggleIsGlobalLoading(false));\n    });\n  }\n};\n\nexport const requestMorePlanets = (next) => {\n  return async (dispatch) => {\n    dispatch(toggleIsLoading(true));\n    swapi.getMorePlanets(next).then((response) => {\n      dispatch(addPlanets(response));\n    }).catch(() => {\n      window.location.hash = '#/error'\n    }).finally(() => {\n      dispatch(toggleIsLoading(false));\n    });\n  }\n};\n\nexport const searchPlanets = (searchvalue) => {\n  return async (dispatch) => {\n    dispatch(toggleIsGlobalLoading(true));\n    swapi.searchPlanets(searchvalue).then((response) => {\n      dispatch(setPlanets(response));\n    }).catch(() => {\n      window.location.hash = '#/error'\n    }).finally(() => {\n      dispatch(toggleIsGlobalLoading(false));\n    });\n  }\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Card.module.scss';\n\nconst Card = ({ id, name, climate, population }) => (\n  <NavLink className={s.Card} to={`/planet/${id}`}>\n    <div className={s.Card__property}>\n      <div className={s.name}>\n        Name\n      </div>\n      <div className={s.value}>\n        {name}\n      </div>\n    </div>\n\n    <div className={s.Card__property}>\n      <div className={s.name}>\n        Climate\n      </div>\n      <div className={s.value}>\n        {climate}\n      </div>\n    </div>\n\n    <div className={s.Card__property}>\n      <div className={s.name}>\n        Population\n      </div>\n      <div className={s.value}>\n        {population}\n      </div>\n    </div>\n\n  </NavLink>\n);\n\nexport default React.memo(Card);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport Preloader from '../Preloader/Preloader';\nimport { requestMorePlanets, requestPlanets, searchPlanets } from './../../redux/planetsReducer';\nimport Card from './../Card/Card';\nimport s from './Library.module.scss';\nimport cn from 'classnames';\nimport { IS_ELECTRON } from '../../constants/general';\n\nconst Library = ({ planets, requestPlanets, requestMorePlanets, next, isGlobalLoading, isLoading, match, searchPlanets }) => {\n\n  useEffect(() => {\n    if (match.params.searchValue) {\n      searchPlanets(match.params.searchValue);\n    } else {\n      requestPlanets();\n    }\n  }, [match.params.searchValue, searchPlanets, requestPlanets])\n\n  const PlanetUrlToID = (url) => +url.match(/(?<=planets\\/)\\d+/i);\n\n  return (isGlobalLoading\n    ? <Preloader style={{ height: `calc(100vh - ${IS_ELECTRON ? 120 : 70}px)` }} />\n    : <>\n      {planets.length === 0 &&\n        <div className={s.NotFound}>\n          PLANETS NOT FOUND\n        </div>\n      }\n\n      <div className={s.Library}>\n        {planets.map(planet => (\n          <Card\n            key={PlanetUrlToID(planet.url)}\n            id={PlanetUrlToID(planet.url)}\n            name={planet.name}\n            climate={planet.climate}\n            population={planet.population}\n          />\n        ))}\n      </div>\n\n      {next &&\n        <div className={cn(s.showMoreBtn, { [s.showMoreBtn_preloader]: isLoading })} // showMoreButton which show more planets\n          onClick={() => {\n            if (!isLoading) requestMorePlanets(next)\n          }}\n        >\n          {!isLoading && 'SHOW MORE'}\n        </div>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  planets: state.planets.planets,\n  next: state.planets.next,\n  isLoading: state.planets.isLoading,\n  isGlobalLoading: state.planets.isGlobalLoading,\n});\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    { requestMorePlanets, requestPlanets, searchPlanets }\n  )\n)(React.memo(Library));","import swapi from './../API/swapi';\n\nconst SET_PLANET_DETAILS = 'currentPlanet/SET_PLANET_DETAILS',\n  SET_PLANET_RESIDENTS = 'currentPlanet/SET_PLANET_RESIDENTS',\n  CLEAR_CURRENT_PLANET = 'currentPlanet/CLEAR_CURRENT_PLANET',\n  TOGGLE_IS_LOADING = 'currentPlanet/TOGGLE_IS_LOADING';\n\nconst initialState = {\n  name: null,\n  rotation_period: null,\n  diameter: null,\n  climate: null,\n  gravity: null,\n  terrain: null,\n  population: null,\n  residents: [],\n  isLoading: false,\n};\n\nconst currentPlanetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLANET_DETAILS: // add planet details to state, whitout residents property\n      return {\n        ...state,\n        name: action.payload.name,\n        rotation_period: action.payload.rotation_period,\n        diameter: action.payload.diameter,\n        climate: action.payload.climate,\n        gravity: action.payload.gravity,\n        terrain: action.payload.terrain,\n        population: action.payload.population,\n      };\n    case SET_PLANET_RESIDENTS: // add residents property\n      return {\n        ...state,\n        residents: action.payload,\n      };\n    case TOGGLE_IS_LOADING: // show preloader\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n    case CLEAR_CURRENT_PLANET:\n      return initialState;\n    default: return state;\n  }\n}\n\nexport default currentPlanetReducer;\nconst setPlanetDetails = (data) => ({ type: SET_PLANET_DETAILS, payload: data });\nconst setPlanetResidents = (data) => ({ type: SET_PLANET_RESIDENTS, payload: data });\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\nexport const clearCurrentPlanet = () => ({ type: CLEAR_CURRENT_PLANET });\n\nexport const requestPlanetDetails = (id) => {\n  return async (dispatch) => {\n    dispatch(toggleIsLoading(true));\n    swapi.getPlanetDetails(id).then(async (response) => {\n      await Promise.all( // add residents property such as array of names (from array of urls)\n        response.residents.map(person => swapi.getPerson(person))\n      ).then((residentsResponse) => {\n        dispatch(setPlanetResidents(residentsResponse.map(({ name }) => name)))\n      })\n      dispatch(setPlanetDetails(response));\n    }).catch(() => {\n      window.location.hash = '#/error'\n    }).finally(() => {\n      dispatch(toggleIsLoading(false));\n    })\n  }\n};","import React from 'react';\nimport s from './InfoField.module.scss';\n\nconst InfoField = ({ propertyName, values }) => {\n  const displayValues = (Array.isArray(values) || values.split(', ').length < 2) ? values : values.split(', ');\n\n  return (\n    <div className={s.InfoField}>\n      <span className={s.name}>\n        {propertyName && propertyName.toUpperCase().replace('_', ' ')}\n      </span>\n\n      <div className={s.values}>\n        {Array.isArray(displayValues)\n          ? displayValues.map((item) => (\n            <span key={item}>\n              {item}\n            </span>\n          ))\n          : <span>\n            {values}\n          </span>\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default InfoField;","\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IS_ELECTRON } from '../../constants/general';\nimport Preloader from '../Preloader/Preloader';\nimport { requestPlanetDetails, clearCurrentPlanet } from './../../redux/currentPlanetReducer';\nimport InfoField from './InfoField/InfoField';\nimport s from './PlanetPage.module.scss';\n\nconst PlanetPage = ({ match, requestPlanetDetails, clearCurrentPlanet, details, isLoading, history }) => {\n\n  useEffect(() => {\n    requestPlanetDetails(match.params.id, history);\n    return () => {\n      clearCurrentPlanet();\n    }\n  }, [match.params.id, requestPlanetDetails, clearCurrentPlanet, history]) // when change url(planet/:id)\n\n  useEffect(() => {\n    window.electron?.ipcRenderer.send('changeTitle', details.name || '')\n  }, [details.name])\n\n  return (isLoading\n    ? <Preloader style={{ height: `calc(100vh - ${IS_ELECTRON ? 120 : 70}px)` }} />\n    : (\n      <div className={s.PlanetPage}>\n        <div className={s.InfoBlock}>\n          {Object.entries(details)\n            .filter(([key, values]) => values && values.length > 0)\n            .map(([key, values]) => {\n              return <InfoField key={key} propertyName={key} values={values} />\n            }\n            )}\n\n        </div>\n        <img src={require('./../../img/star-wars-gif.gif').default} alt='' />\n      </div>\n    )\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  details: {\n    name: state.currentPlanet.name,\n    rotation_period: state.currentPlanet.rotation_period,\n    diameter: state.currentPlanet.diameter,\n    climate: state.currentPlanet.climate,\n    gravity: state.currentPlanet.gravity,\n    terrain: state.currentPlanet.terrain,\n    population: state.currentPlanet.population,\n    residents: state.currentPlanet.residents,\n  },\n  isLoading: state.currentPlanet.isLoading,\n});\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    { requestPlanetDetails, clearCurrentPlanet }\n  )\n)(React.memo(PlanetPage))","const SET_SEARCH_VALUE = 'search/SET_SEARCH_VALUE';\n\nconst initialState = {\n  searchValue: '',\n};\n\nconst SearchForm = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SEARCH_VALUE: // set searchValue property in searchForm\n      return {\n        ...state,\n        searchValue: action.payload,\n      };\n    default: return state;\n  }\n}\n\nexport default SearchForm;\nexport const setSearchValue = (data) => ({ type: SET_SEARCH_VALUE, payload: data });","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport s from './SearchForm.module.scss';\nimport { setSearchValue } from './../../redux/searchFormReducer';\n\nconst SearchForm = ({ setSearchValue, match, searchValue, history }) => {\n  useEffect(() => {\n    setSearchValue(match.params.searchValue || '')\n  }, [match.params.searchValue, setSearchValue])\n\n  const search = (e) => { // go to search url\n    e.preventDefault();\n    if (searchValue) {\n      history.push(`/search/${searchValue}`);\n    } else {\n      history.push('/');\n    }\n  }\n\n  return (\n    <form onSubmit={search} className={s.searchForm}>\n      <input\n        className={s.search} type=\"text\"\n        onChange={(e) => setSearchValue(e.target.value)}\n        value={searchValue ? searchValue : ''}\n        placeholder='Search planets...' />\n      <button type=\"submit\" />\n    </form>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  searchValue: state.searchForm.searchValue,\n});\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    { setSearchValue }\n  )\n)(React.memo(SearchForm))","import React from 'react';\nimport s from './Error.module.scss'\nimport { NavLink } from 'react-router-dom';\n\nconst Error = () => (\n  <div className={s.error}>\n    <div className={s.contentWrapper}>\n      <div className={s.title}>ERROR</div>\n      <div>whoops! <span>Houston, we have a problem</span></div>\n      <NavLink className={s.mainPageBtn} to='/' >\n        MAIN PAGE\n      </NavLink>\n    </div>\n  </div>\n)\n\nexport default Error;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport s from './DesktopHeader.module.scss';\n\nconst DesktopHeader = ({ match, history }) => {\n  return (\n    <div className={s.header}>\n      {match.path !== '/'\n        ? (\n          <img src={require('../../img/back.svg').default} alt=\"ho_back\" className={s.btn} onClick={() => history.goBack()} />\n        ) : <div className={s.empty} />}\n      <img src=\"./logo192.png\" alt=\"ho_back\" className={s.btn} onClick={() => history.goBack()} />\n      <div className={s.barOverlay} />\n    </div>\n  )\n};\n\nexport default withRouter(React.memo(DesktopHeader))","import './App.scss';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Library from './components/Library/Library';\nimport PlanetPage from './components/PlanetPage/PlanetPage';\nimport SearchForm from './components/SearchForm/SearchForm';\nimport Error from './components/Error/Error';\nimport DesktopHeader from './components/DesktopHeader/DesktopHeader';\nimport { IS_ELECTRON } from './constants/general';\n\nconst SearchFormAndLibrary = (\n  <>\n    <SearchForm />\n    <Library />\n  </>\n)\n\nconst SearchFormAndPlanetPage = (\n  <>\n    <SearchForm />\n    <PlanetPage />\n  </>\n)\n\nconst withHeader = (Component) => (\n  <>\n    {IS_ELECTRON && <DesktopHeader />}\n    {Component}\n  </>\n)\n\nconst App = () => {\n  return (\n    <div className={IS_ELECTRON ? 'ElectronApp' : 'App'}>\n      <Switch>\n        <Route exact path='/' render={() => withHeader(SearchFormAndLibrary)} />\n        <Route path='/planet/:id' render={() => withHeader(SearchFormAndPlanetPage)} />\n        <Route path='/search/:searchValue' render={() => withHeader(SearchFormAndLibrary)} />\n        <Route path='/error' render={() => withHeader(<Error />)} />\n        <Route path='*' render={() => <Redirect to='/error' />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport planetsReducer from './planetsReducer';\nimport currentPlanetReducer from './currentPlanetReducer';\nimport searchFormReducer from './searchFormReducer';\n\nconst reducers = combineReducers({\n  planets: planetsReducer,\n  currentPlanet: currentPlanetReducer,\n  searchForm: searchFormReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // ReduxDevTools for Chrome\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);"],"sourceRoot":""}