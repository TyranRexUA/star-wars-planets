{"version":3,"sources":["components/Card/Card.module.scss","components/Library/Library.module.scss","components/NotFound404/NotFound404.module.scss","components/PlanetPage/InfoField/InfoField.module.scss","components/PlanetPage/PlanetPage.module.scss","components/SearchForm/SearchForm.module.scss","components/Preloader/Preloader.module.scss","img/star-wars-gif.gif","components/Preloader/Preloader.jsx","API/swapi.js","redux/planetsReducer.js","components/Card/Card.jsx","components/Library/Library.jsx","redux/currentPlanetReducer.js","components/PlanetPage/InfoField/InfoField.jsx","components/PlanetPage/PlanetPage.jsx","redux/searchFormReducer.js","components/SearchForm/SearchForm.jsx","components/NotFound404/NotFound404.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","Preloader","props","className","styles","instance","axios","create","baseURL","swapi","getPlanets","get","then","response","data","getMorePlanets","next","replace","getPlanetDetails","id","getPersonName","url","name","searchPlanets","searchValue","SET_PLANETS","ADD_PLANETS","TOGGLE_IS_GLOBAL_LOADING","TOGGLE_IS_LOADING","initialState","planets","isLoading","isGlobalLoading","planetsReducer","state","action","type","payload","results","setPlanets","toggleIsLoading","toggleIsGlobalLoading","Card","climate","population","s","to","Card__property","value","React","memo","Library","requestPlanets","requestMorePlanets","match","lastLocation","useLastLocation","useEffect","params","length","test","pathname","location","PlanetUrlToID","style","height","NotFound","map","planet","cn","showMoreBtn","showMoreBtn_preloader","onClick","compose","withRouter","connect","dispatch","a","searchvalue","SET_PLANET_DETAILS","SET_PLANET_RESIDENTS","rotation_period","diameter","gravity","terrain","residents","currentPlanetReducer","setPlanetResidents","InfoField","propertyName","values","toUpperCase","Array","isArray","PlanetPage","requestPlanetDetails","details","InfoBlock","Object","entries","filter","key","src","require","default","alt","currentPlanet","Promise","all","person","residentsResponse","SET_SEARCH_VALUE","SearchForm","setSearchValue","history","window","addEventListener","e","reason","request","status","push","onSubmit","preventDefault","searchForm","search","onChange","target","placeholder","NotFound404","contentWrapper","title","mainPageBtn","SearchFormAndLibrary","SearchFormAndPlanetPage","App","exact","path","render","reducers","combineReducers","searchFormReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f41dd9e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__E4n_N\",\"Card__property\":\"Card_Card__property__6ooGW\",\"name\":\"Card_name__2M2E6\",\"value\":\"Card_value__1D3VY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Library\":\"Library_Library__9QTjD\",\"NotFound\":\"Library_NotFound__1gWGB\",\"showMoreBtn\":\"Library_showMoreBtn__3amXS\",\"showMoreBtn_preloader\":\"Library_showMoreBtn_preloader__16ZSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound404\":\"NotFound404_NotFound404__1qX-c\",\"contentWrapper\":\"NotFound404_contentWrapper__2Sbof\",\"title\":\"NotFound404_title__2Fphb\",\"mainPageBtn\":\"NotFound404_mainPageBtn__2dHr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoField\":\"InfoField_InfoField__1LEY_\",\"name\":\"InfoField_name__3PIUT\",\"values\":\"InfoField_values__3Q3YW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanetPage\":\"PlanetPage_PlanetPage__1jf3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__1JtUR\",\"search\":\"SearchForm_search__3j8oR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__lrE8P\"};","export default __webpack_public_path__ + \"static/media/star-wars-gif.153166d7.gif\";","import React from 'react';\r\nimport styles from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => (\r\n    <div className={styles.Preloader} {...props}></div>\r\n)\r\n\r\n\r\nexport default Preloader;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/',\r\n})\r\n\r\nconst swapi = {\r\n    getPlanets() { // get planets(page=1)\r\n        return instance.get('planets/').then(response => response.data)\r\n    },\r\n\r\n    getMorePlanets(next) { // get planets(page=2, 3, ...), depends on url(next)\r\n        return axios.get(next.replace('http', 'https')).then(response => response.data)\r\n    },\r\n\r\n    getPlanetDetails(id) {\r\n        return instance.get(`planets/${id}/`).then(response => response.data)\r\n    },\r\n\r\n    getPersonName(url) { // get person name from person url\r\n        return axios.get(url.replace('http', 'https')).then(response => response.data.name)\r\n    },\r\n\r\n    searchPlanets(searchValue) { // search planets(page=1)\r\n        return axios.get(`https://swapi.dev/api/planets/?search=${searchValue}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport default swapi;","import swapi from './../API/swapi';\r\n\r\nconst SET_PLANETS = 'planets/SET_PLANETS',\r\n    ADD_PLANETS = 'planets/ADD_PLANETS',\r\n    TOGGLE_IS_GLOBAL_LOADING = 'planets/TOGGLE_IS_GLOBAL_LOADING',\r\n    TOGGLE_IS_LOADING = 'planets/TOGGLE_IS_LOADING';\r\n\r\nconst initialState = {\r\n    next: '',\r\n    planets: [],\r\n    isLoading: false,\r\n    isGlobalLoading: false,\r\n};\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANETS: // when componentDidMount add planets(page=1) to state\r\n            return {\r\n                ...state,\r\n                planets: [...action.payload.results],\r\n                next: action.payload.next\r\n            };\r\n        case ADD_PLANETS: // add planets(page=2, 3, ....) to state\r\n            return {\r\n                ...state,\r\n                planets: [...state.planets, ...action.payload.results],\r\n                next: action.payload.next\r\n            };\r\n        case TOGGLE_IS_LOADING: // show preloader in showMoreBtn in Library\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case TOGGLE_IS_GLOBAL_LOADING: // show preloader\r\n            return {\r\n                ...state,\r\n                isGlobalLoading: action.isLoading\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default planetsReducer;\r\nconst setPlanets = (data) => ({ type: SET_PLANETS, payload: data });\r\nconst addPlanets = (data) => ({ type: ADD_PLANETS, payload: data });\r\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\r\nconst toggleIsGlobalLoading = (isLoading) => ({ type: TOGGLE_IS_GLOBAL_LOADING, isLoading });\r\n\r\nexport const requestPlanets = () => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsGlobalLoading(true));\r\n        let response = await swapi.getPlanets();\r\n        dispatch(setPlanets(response));\r\n        dispatch(toggleIsGlobalLoading(false));\r\n    }\r\n};\r\n\r\nexport const requestMorePlanets = (next) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        let response = await swapi.getMorePlanets(next);\r\n        dispatch(addPlanets(response));\r\n        dispatch(toggleIsLoading(false));\r\n    }\r\n};\r\n\r\nexport const searchPlanets = (searchvalue) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsGlobalLoading(true));\r\n        let response = await swapi.searchPlanets(searchvalue);\r\n        dispatch(setPlanets(response));\r\n        dispatch(toggleIsGlobalLoading(false));\r\n    }\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Card.module.scss';\r\n\r\nconst Card = ({ id, name, climate, population }) => {\r\n\r\n    return (\r\n        <NavLink className={s.Card} to={`/planet/${id}`}>\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Name\r\n                </div>\r\n                <div className={s.value}>\r\n                    {name}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Climate\r\n                </div>\r\n                <div className={s.value}>\r\n                    {climate}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Population\r\n                    </div>\r\n                <div className={s.value}>\r\n                    {population}\r\n                </div>\r\n            </div>\r\n\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default React.memo(Card);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { requestMorePlanets, requestPlanets, searchPlanets } from './../../redux/planetsReducer';\r\nimport Card from './../Card/Card';\r\nimport s from './Library.module.scss';\r\nimport cn from 'classnames';\r\n\r\nconst Library = ({ planets, requestPlanets, requestMorePlanets, next, isGlobalLoading, isLoading, match, searchPlanets, ...props }) => {\r\n\r\n    const lastLocation = useLastLocation();\r\n\r\n    useEffect(() => {\r\n        if (match.params.searchValue) { // if url has searcvh/:searchValue\r\n            searchPlanets(match.params.searchValue);\r\n        } else if (planets.length === 0 || (lastLocation && (/(search|\\/404)/).test(lastLocation.pathname))) { // if previous location was /search/... or /404\r\n            requestPlanets();\r\n        }\r\n    }, [match.params.searchValue, searchPlanets, props.location, requestPlanets, lastLocation])\r\n\r\n    const PlanetUrlToID = (url) => +url.match(/(?<=planets\\/)\\d+/i);\r\n\r\n    return (isGlobalLoading\r\n        ? <Preloader style={{ height: 'calc(100vh - 70px)' }} />\r\n        : <>\r\n            {planets.length === 0 &&\r\n                <div className={s.NotFound}>\r\n                    PLANETS NO FOUND\r\n                </div>\r\n            }\r\n\r\n            <div className={s.Library}>\r\n                {planets.map(planet => (\r\n                    <Card\r\n                        key={PlanetUrlToID(planet.url)}\r\n                        id={PlanetUrlToID(planet.url)}\r\n                        name={planet.name}\r\n                        climate={planet.climate}\r\n                        population={planet.population}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {next &&\r\n                <div className={cn(s.showMoreBtn, { [s.showMoreBtn_preloader]: isLoading })} // showMoreButton which show more planets\r\n                    onClick={() => {\r\n                        if (!isLoading) requestMorePlanets(next)\r\n                    }}\r\n                >\r\n                    {!isLoading && 'SHOW MORE'}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    planets: state.planets.planets,\r\n    next: state.planets.next,\r\n    isLoading: state.planets.isLoading,\r\n    isGlobalLoading: state.planets.isGlobalLoading,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { requestMorePlanets, requestPlanets, searchPlanets }\r\n    )\r\n)(React.memo(Library));","import swapi from './../API/swapi';\r\n\r\nconst   SET_PLANET_DETAILS = 'currentPlanet/SET_PLANET_DETAILS',\r\n        SET_PLANET_RESIDENTS = 'currentPlanet/SET_PLANET_RESIDENTS',\r\n        TOGGLE_IS_LOADING = 'currentPlanet/TOGGLE_IS_LOADING';\r\n\r\nconst initialState = {\r\n    name: null,\r\n    rotation_period: null,\r\n    diameter: null,\r\n    climate: null,\r\n    gravity: null,\r\n    terrain: null,\r\n    population: null,\r\n    residents: [],\r\n    isLoading: false,\r\n};\r\n\r\nconst currentPlanetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANET_DETAILS: // add planet details to state, whitout residents property\r\n            return {...state,\r\n                name: action.payload.name,\r\n                rotation_period: action.payload.rotation_period,\r\n                diameter: action.payload.diameter,\r\n                climate: action.payload.climate,\r\n                gravity: action.payload.gravity,\r\n                terrain: action.payload.terrain,\r\n                population: action.payload.population,\r\n            };\r\n            case SET_PLANET_RESIDENTS: // add residents property\r\n                return {...state,\r\n                    residents: action.payload,\r\n                };\r\n        case TOGGLE_IS_LOADING: // show preloader\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default currentPlanetReducer;\r\nconst setPlanetDetails = (data) => ({ type: SET_PLANET_DETAILS, payload: data });\r\nconst setPlanetResidents = (data) => ({ type: SET_PLANET_RESIDENTS, payload: data });\r\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\r\n\r\nexport const requestPlanetDetails = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        let response = await swapi.getPlanetDetails(id);\r\n        dispatch(setPlanetDetails(response));\r\n\r\n            let residentsResponse = await Promise.all( // add residents property such as array of names (from array of urls)\r\n                response.residents.map(person => swapi.getPersonName(person))\r\n            )\r\n\r\n            dispatch(setPlanetResidents(residentsResponse))\r\n            dispatch(toggleIsLoading(false));\r\n    }\r\n};","import React from 'react';\r\nimport s from './InfoField.module.scss';\r\n\r\nconst InfoField = ({ propertyName, values }) => (\r\n\r\n    <div className={s.InfoField}>\r\n\r\n        <span className={s.name}>\r\n            {propertyName && propertyName.toUpperCase().replace('_', ' ')}\r\n        </span>\r\n\r\n        <div className={s.values}>\r\n\r\n            {Array.isArray(values)\r\n                ? values.map(value => (\r\n                    <span key={value}>\r\n                        {value}\r\n                    </span>\r\n                ))\r\n                : <span>\r\n                    {values}\r\n                </span>\r\n            }\r\n\r\n        </div>\r\n\r\n    </div>\r\n    \r\n);\r\n\r\nexport default InfoField;","\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { requestPlanetDetails } from './../../redux/currentPlanetReducer';\r\nimport InfoField from './InfoField/InfoField';\r\nimport s from './PlanetPage.module.scss';\r\n\r\nconst PlanetPage = ({ match, requestPlanetDetails, details, isLoading, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        requestPlanetDetails(match.params.id);\r\n    }, [match.params.id, requestPlanetDetails]) // when change url(planet/:id)\r\n\r\n    return (isLoading\r\n        ? <Preloader style={{height: 'calc(100vh - 70px)'}}/>\r\n        : <div className={s.PlanetPage}>\r\n\r\n            <div className={s.InfoBlock}>\r\n\r\n                {Object.entries(details)\r\n                .filter(([key, values]) => values && values.length > 0)\r\n                .map(([key, values]) => {\r\n                        return <InfoField key={key} propertyName={key} values={values} />\r\n                    }\r\n                )}\r\n\r\n            </div>\r\n\r\n            <img src={require('./../../img/star-wars-gif.gif').default} alt=''/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: {\r\n        name: state.currentPlanet.name,\r\n        rotation_period: state.currentPlanet.rotation_period,\r\n        diameter: state.currentPlanet.diameter,\r\n        climate: state.currentPlanet.climate,\r\n        gravity: state.currentPlanet.gravity,\r\n        terrain: state.currentPlanet.terrain,\r\n        population: state.currentPlanet.population,\r\n        residents: state.currentPlanet.residents,\r\n    },\r\n    isLoading: state.currentPlanet.isLoading,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { requestPlanetDetails }\r\n    )\r\n)(React.memo(PlanetPage))","const   SET_SEARCH_VALUE = 'search/SET_SEARCH_VALUE';\r\n\r\nconst initialState = {\r\n    searchValue: '',\r\n};\r\n\r\nconst SearchForm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_VALUE: // set searchValue property in searchForm\r\n            return {...state,\r\n                searchValue: action.payload,\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\nexport const setSearchValue = (data) => ({type: SET_SEARCH_VALUE, payload: data});","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport s from './SearchForm.module.scss';\r\nimport { setSearchValue } from './../../redux/searchFormReducer';\r\n\r\nconst SearchForm = ({ setSearchValue, match, searchValue, history }) => {\r\n\r\n    useEffect(() => {\r\n        if (match.params.searchValue) {\r\n            setSearchValue(match.params.searchValue)\r\n        }\r\n    }, [match.params.searchValue, setSearchValue])\r\n\r\n    window.addEventListener('unhandledrejection', (e) => { // if 404 error go to url /404\r\n        if (e.reason.request.status === 404) history.push('/404');\r\n    })\r\n\r\n    const search = (e) => { // go to search url\r\n        e.preventDefault();\r\n        if (searchValue) {\r\n            history.push(`/search/${searchValue}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={search} className={s.searchForm}>\r\n            <input\r\n                className={s.search} type=\"text\"\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n                value={searchValue ? searchValue : ''}\r\n                placeholder='Search planets...' />\r\n            <button type=\"submit\" />\r\n        </form>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    searchValue: state.searchForm.searchValue,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { setSearchValue }\r\n    )\r\n)(React.memo(SearchForm))","import React from 'react';\r\nimport s from './NotFound404.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NotFound404 = () => (\r\n    <div className={s.NotFound404}>\r\n        <div className={s.contentWrapper}>\r\n            <div className={s.title}>404</div>\r\n            <div>whoops! <span>NOT FOUND</span></div>\r\n            <NavLink className={s.mainPageBtn} to='/' >\r\n                MAIN PAGE\r\n            </NavLink>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default NotFound404;","import './App.scss';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Library from './components/Library/Library';\nimport PlanetPage from './components/PlanetPage/PlanetPage';\nimport SearchForm from './components/SearchForm/SearchForm';\nimport NotFound404 from './components/NotFound404/NotFound404';\n\nconst SearchFormAndLibrary = (\n  <>\n    <SearchForm />\n    <Library />\n  </>\n)\n\nconst SearchFormAndPlanetPage = (\n  <>\n    <SearchForm />\n    <PlanetPage />\n  </>\n)\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' render={() => SearchFormAndLibrary} />\n        <Route path='/planet/:id' render={() => SearchFormAndPlanetPage} />\n        <Route path='/search/:searchValue' render={() => SearchFormAndLibrary} />\n        <Route path='/404' render={() => <NotFound404 /> } />\n        <Route path='*' render={() => <Redirect to='/404' />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport planetsReducer from './planetsReducer';\r\nimport currentPlanetReducer from './currentPlanetReducer';\r\nimport searchFormReducer from './searchFormReducer';\r\n\r\nconst reducers = combineReducers({\r\n    planets: planetsReducer,\r\n    currentPlanet: currentPlanetReducer,\r\n    searchForm: searchFormReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // ReduxDevTools for Chrome\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { LastLocationProvider } from 'react-router-last-location';\n\nReactDOM.render(\n  <HashRouter>\n    <LastLocationProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </LastLocationProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);"],"sourceRoot":""}