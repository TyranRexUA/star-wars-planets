{"version":3,"sources":["components/Card/Card.module.scss","components/Library/Library.module.scss","components/PlanetPage/InfoField/InfoField.module.scss","components/PlanetPage/PlanetPage.module.scss","components/SearchForm/SearchForm.module.scss","components/Preloader/Preloader.module.scss","img/star-wars-gif.gif","components/Preloader/Preloader.jsx","API/swapi.js","redux/planetsReducer.js","components/Card/Card.jsx","components/Library/Library.jsx","redux/currentPlanetReducer.js","components/PlanetPage/InfoField/InfoField.jsx","components/PlanetPage/PlanetPage.jsx","redux/searchFormReducer.js","components/SearchForm/SearchForm.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","Preloader","props","className","styles","instance","axios","create","baseURL","swapi","getPlanets","get","then","response","data","getMorePlanets","next","getPlanetDetails","id","getPersonName","url","name","searchPlanets","searchValue","SET_PLANETS","ADD_PLANETS","TOGGLE_IS_GLOBAL_LOADING","TOGGLE_IS_LOADING","initialState","planets","isLoading","isGlobalLoading","planetsReducer","state","action","type","payload","results","setPlanets","toggleIsLoading","toggleIsGlobalLoading","Card","climate","population","s","to","Card__property","value","React","memo","Library","requestPlanets","requestMorePlanets","match","useEffect","params","location","PlanetUrlToID","style","height","map","planet","cn","showMoreBtn","showMoreBtn_preloader","onClick","compose","withRouter","connect","dispatch","a","searchvalue","SET_PLANET_DETAILS","SET_PLANET_RESIDENTS","rotation_period","diameter","gravity","terrain","residents","currentPlanetReducer","setPlanetResidents","InfoField","propertyName","values","toUpperCase","replace","Array","isArray","PlanetPage","requestPlanetDetails","details","InfoBlock","Object","entries","filter","length","key","src","require","default","alt","currentPlanet","Promise","all","person","residentsResponse","SET_SEARCH_VALUE","SearchForm","setSearchValue","history","onSubmit","e","preventDefault","push","searchForm","search","onChange","target","placeholder","SearchFormAndLibrary","SearchFormAndPlanetPage","App","exact","path","render","reducers","combineReducers","searchFormReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5bba91a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__E4n_N\",\"Card__property\":\"Card_Card__property__6ooGW\",\"name\":\"Card_name__2M2E6\",\"value\":\"Card_value__1D3VY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Library\":\"Library_Library__9QTjD\",\"showMoreBtn\":\"Library_showMoreBtn__3amXS\",\"showMoreBtn_preloader\":\"Library_showMoreBtn_preloader__16ZSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoField\":\"InfoField_InfoField__1LEY_\",\"name\":\"InfoField_name__3PIUT\",\"values\":\"InfoField_values__3Q3YW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanetPage\":\"PlanetPage_PlanetPage__1jf3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__1JtUR\",\"search\":\"SearchForm_search__3j8oR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__lrE8P\"};","export default __webpack_public_path__ + \"static/media/star-wars-gif.153166d7.gif\";","import React from 'react';\r\nimport styles from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => (\r\n    <div className={styles.Preloader} {...props}></div>\r\n)\r\n\r\n\r\nexport default Preloader;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/',\r\n})\r\n\r\nconst swapi = {\r\n    getPlanets() { // get planets(page=1)\r\n        return instance.get('planets/').then(response => response.data)\r\n    },\r\n\r\n    getMorePlanets(next) { // get planets(page=2, 3, ...), depends on url(next)\r\n        return axios.get(next).then(response => response.data)\r\n    },\r\n\r\n    getPlanetDetails(id) {\r\n        return instance.get(`planets/${id}/`).then(response => response.data)\r\n    },\r\n\r\n    getPersonName(url) { // get person name from person url\r\n        return axios.get(url).then(response => response.data.name)\r\n    },\r\n\r\n    searchPlanets(searchValue) { // search planets(page=1)\r\n        return axios.get(`https://swapi.dev/api/planets/?search=${searchValue}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport default swapi;","import swapi from './../API/swapi';\r\n\r\nconst SET_PLANETS = 'planets/SET_PLANETS',\r\n    ADD_PLANETS = 'planets/ADD_PLANETS',\r\n    TOGGLE_IS_GLOBAL_LOADING = 'planets/TOGGLE_IS_GLOBAL_LOADING',\r\n    TOGGLE_IS_LOADING = 'planets/TOGGLE_IS_LOADING';\r\n\r\nconst initialState = {\r\n    next: '',\r\n    planets: [],\r\n    isLoading: false,\r\n    isGlobalLoading: false,\r\n};\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANETS: // when componentDidMount add planets(page=1) to state\r\n            return {\r\n                ...state,\r\n                planets: [...action.payload.results],\r\n                next: action.payload.next\r\n            };\r\n        case ADD_PLANETS: // add planets(page=2, 3, ....) to state\r\n            return {\r\n                ...state,\r\n                planets: [...state.planets, ...action.payload.results],\r\n                next: action.payload.next\r\n            };\r\n        case TOGGLE_IS_LOADING: // show preloader in showMoreBtn in Library\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case TOGGLE_IS_GLOBAL_LOADING: // show preloader\r\n            return {\r\n                ...state,\r\n                isGlobalLoading: action.isLoading\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default planetsReducer;\r\nconst setPlanets = (data) => ({ type: SET_PLANETS, payload: data });\r\nconst addPlanets = (data) => ({ type: ADD_PLANETS, payload: data });\r\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\r\nconst toggleIsGlobalLoading = (isLoading) => ({ type: TOGGLE_IS_GLOBAL_LOADING, isLoading });\r\n\r\nexport const requestPlanets = () => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsGlobalLoading(true));\r\n        let response = await swapi.getPlanets();\r\n        dispatch(setPlanets(response));\r\n        dispatch(toggleIsGlobalLoading(false));\r\n    }\r\n};\r\n\r\nexport const requestMorePlanets = (next) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        let response = await swapi.getMorePlanets(next);\r\n        dispatch(addPlanets(response));\r\n        dispatch(toggleIsLoading(false));\r\n    }\r\n};\r\n\r\nexport const searchPlanets = (searchvalue) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsGlobalLoading(true));\r\n        let response = await swapi.searchPlanets(searchvalue);\r\n        dispatch(setPlanets(response));\r\n        dispatch(toggleIsGlobalLoading(false));\r\n    }\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Card.module.scss';\r\n\r\nconst Card = ({ id, name, climate, population }) => {\r\n\r\n    return (\r\n        <NavLink className={s.Card} to={`/planet/${id}`}>\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Name\r\n                </div>\r\n                <div className={s.value}>\r\n                    {name}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Climate\r\n                </div>\r\n                <div className={s.value}>\r\n                    {climate}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.Card__property}>\r\n                <div className={s.name}>\r\n                    Population\r\n                    </div>\r\n                <div className={s.value}>\r\n                    {population}\r\n                </div>\r\n            </div>\r\n\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default React.memo(Card);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { requestMorePlanets, requestPlanets, searchPlanets } from './../../redux/planetsReducer';\r\nimport Card from './../Card/Card';\r\nimport s from './Library.module.scss';\r\nimport cn from 'classnames';\r\n\r\nconst Library = ({ planets, requestPlanets, requestMorePlanets, next, isGlobalLoading, isLoading, match, searchPlanets, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        if (match.params.searchValue) {\r\n            searchPlanets(match.params.searchValue);\r\n        } else {\r\n            requestPlanets();\r\n        }\r\n    }, [match.params.searchValue, searchPlanets, props.location, requestPlanets])\r\n\r\n    const PlanetUrlToID = (url) => +url.match(/(?<=planets\\/)\\d+/i);\r\n\r\n    return (isGlobalLoading\r\n        ? <Preloader style={{ height: 'calc(100vh - 70px)' }} />\r\n        : <>\r\n            <div className={s.Library}>\r\n                {planets.map(planet => (\r\n                    <Card\r\n                        key={PlanetUrlToID(planet.url)}\r\n                        id={PlanetUrlToID(planet.url)}\r\n                        name={planet.name}\r\n                        climate={planet.climate}\r\n                        population={planet.population}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {next &&\r\n                <div className={cn(s.showMoreBtn, { [s.showMoreBtn_preloader]: isLoading })} // showMoreButton which show more planets\r\n                    onClick={() => {\r\n                        if (!isLoading) requestMorePlanets(next)\r\n                    }}\r\n                >\r\n                    {!isLoading && 'SHOW MORE'}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    planets: state.planets.planets,\r\n    next: state.planets.next,\r\n    isLoading: state.planets.isLoading,\r\n    isGlobalLoading: state.planets.isGlobalLoading,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { requestMorePlanets, requestPlanets, searchPlanets }\r\n    )\r\n)(React.memo(Library));","import swapi from './../API/swapi';\r\n\r\nconst   SET_PLANET_DETAILS = 'currentPlanet/SET_PLANET_DETAILS',\r\n        SET_PLANET_RESIDENTS = 'currentPlanet/SET_PLANET_RESIDENTS',\r\n        TOGGLE_IS_LOADING = 'currentPlanet/TOGGLE_IS_LOADING';\r\n\r\nconst initialState = {\r\n    name: null,\r\n    rotation_period: null,\r\n    diameter: null,\r\n    climate: null,\r\n    gravity: null,\r\n    terrain: null,\r\n    population: null,\r\n    residents: [],\r\n    isLoading: false,\r\n};\r\n\r\nconst currentPlanetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANET_DETAILS: // add planet details to state, whitout residents property\r\n            return {...state,\r\n                name: action.payload.name,\r\n                rotation_period: action.payload.rotation_period,\r\n                diameter: action.payload.diameter,\r\n                climate: action.payload.climate,\r\n                gravity: action.payload.gravity,\r\n                terrain: action.payload.terrain,\r\n                population: action.payload.population,\r\n            };\r\n            case SET_PLANET_RESIDENTS: // add residents property\r\n                return {...state,\r\n                    residents: action.payload,\r\n                };\r\n        case TOGGLE_IS_LOADING: // show preloader\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default currentPlanetReducer;\r\nconst setPlanetDetails = (data) => ({ type: SET_PLANET_DETAILS, payload: data });\r\nconst setPlanetResidents = (data) => ({ type: SET_PLANET_RESIDENTS, payload: data });\r\nconst toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading });\r\n\r\nexport const requestPlanetDetails = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        let response = await swapi.getPlanetDetails(id);\r\n        dispatch(setPlanetDetails(response));\r\n\r\n            let residentsResponse = await Promise.all( // add residents property such as array of names (from array of urls)\r\n                response.residents.map(person => swapi.getPersonName(person))\r\n            )\r\n\r\n            dispatch(setPlanetResidents(residentsResponse))\r\n            dispatch(toggleIsLoading(false));\r\n    }\r\n};","import React from 'react';\r\nimport s from './InfoField.module.scss';\r\n\r\nconst InfoField = ({ propertyName, values }) => (\r\n\r\n    <div className={s.InfoField}>\r\n\r\n        <span className={s.name}>\r\n            {propertyName && propertyName.toUpperCase().replace('_', ' ')}\r\n        </span>\r\n\r\n        <div className={s.values}>\r\n\r\n            {Array.isArray(values)\r\n                ? values.map(value => (\r\n                    <span key={value}>\r\n                        {value}\r\n                    </span>\r\n                ))\r\n                : <span>\r\n                    {values}\r\n                </span>\r\n            }\r\n\r\n        </div>\r\n\r\n    </div>\r\n    \r\n);\r\n\r\nexport default InfoField;","\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { requestPlanetDetails } from './../../redux/currentPlanetReducer';\r\nimport InfoField from './InfoField/InfoField';\r\nimport s from './PlanetPage.module.scss';\r\n\r\nconst PlanetPage = ({ match, requestPlanetDetails, details, isLoading, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        requestPlanetDetails(match.params.id);\r\n    }, [match.params.id, requestPlanetDetails]) // when change url(planet/:id)\r\n\r\n    return (isLoading\r\n        ? <Preloader style={{height: 'calc(100vh - 30px)'}}/>\r\n        : <div className={s.PlanetPage}>\r\n\r\n            <div className={s.InfoBlock}>\r\n\r\n                {Object.entries(details)\r\n                .filter(([key, values]) => values && values.length > 0)\r\n                .map(([key, values]) => {\r\n                        return <InfoField key={key} propertyName={key} values={values} />\r\n                    }\r\n                )}\r\n\r\n            </div>\r\n\r\n            <img src={require('./../../img/star-wars-gif.gif').default} alt=''/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: {\r\n        name: state.currentPlanet.name,\r\n        rotation_period: state.currentPlanet.rotation_period,\r\n        diameter: state.currentPlanet.diameter,\r\n        climate: state.currentPlanet.climate,\r\n        gravity: state.currentPlanet.gravity,\r\n        terrain: state.currentPlanet.terrain,\r\n        population: state.currentPlanet.population,\r\n        residents: state.currentPlanet.residents,\r\n    },\r\n    isLoading: state.currentPlanet.isLoading,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { requestPlanetDetails }\r\n    )\r\n)(React.memo(PlanetPage))","const   SET_SEARCH_VALUE = 'search/SET_SEARCH_VALUE';\r\n\r\nconst initialState = {\r\n    searchValue: '',\r\n};\r\n\r\nconst SearchForm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_VALUE: // set searchValue property in searchForm\r\n            return {...state,\r\n                searchValue: action.payload,\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\nexport const setSearchValue = (data) => ({type: SET_SEARCH_VALUE, payload: data});","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport s from './SearchForm.module.scss';\r\nimport { setSearchValue } from './../../redux/searchFormReducer';\r\n\r\nconst SearchForm = ({ setSearchValue, match, searchValue, history }) => {\r\n\r\n    useEffect(() => {\r\n        if (match.params.searchValue) {\r\n            setSearchValue(match.params.searchValue)\r\n        }\r\n    }, [match.params.searchValue, setSearchValue])\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        if (searchValue) {\r\n            history.push(`/search/${searchValue}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={search} className={s.searchForm}>\r\n            <input\r\n                className={s.search} type=\"text\"\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n                value={searchValue ? searchValue : ''}\r\n                placeholder='Search planets...' />\r\n            <button type=\"submit\" />\r\n        </form>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    searchValue: state.searchForm.searchValue,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { setSearchValue }\r\n    )\r\n)(React.memo(SearchForm))","import './App.scss';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Library from './components/Library/Library';\nimport PlanetPage from './components/PlanetPage/PlanetPage';\nimport SearchForm from './components/SearchForm/SearchForm';\n\nconst SearchFormAndLibrary = (\n  <>\n    <SearchForm />\n    <Library />\n  </>\n)\n\nconst SearchFormAndPlanetPage = (\n  <>\n    <SearchForm />\n    <PlanetPage />\n  </>\n)\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' render={() => SearchFormAndLibrary} />\n        <Route path='/planet/:id' render={() => SearchFormAndPlanetPage} />\n        <Route path='/search/:searchValue' render={() => SearchFormAndLibrary} />\n        <Route path='*' render={() => <Redirect to='/404' />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport planetsReducer from './planetsReducer';\r\nimport currentPlanetReducer from './currentPlanetReducer';\r\nimport searchFormReducer from './searchFormReducer';\r\n\r\nconst reducers = combineReducers({\r\n    planets: planetsReducer,\r\n    currentPlanet: currentPlanetReducer,\r\n    searchForm: searchFormReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // ReduxDevTools for Chrome\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);"],"sourceRoot":""}